@import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@400;500;700&display=swap');
@import url('/node_modules/materialize-css/dist/css/materialize.css');

* {
  font-family: 'Ubuntu', sans-serif;
}

header {
  display: flex;
  justify-content: flex-end;
  padding: 20px;
  border-bottom: 1px solid lightgray;
}

/* 1. Variables and Interpolation */
/* ============================== */

/* Create a variable with a color as it's value and apply it to the h1 */
$my-variable: blue;

h1 {
  color: $my-variable;
}

/* Create a variable with the string value of 'interpolation' and use
 * it to select the elements that has the class "var-interpolation",
 * then apply a text color 
*/

$my-second-variable: 'interpolation';

.var-#{$my-second-variable} { // -> .var-interpolation
  color: green;
}

/* Create a variable with a CSS property name then select the h3 and
 * interpolate the property with a value
 */

$my-third-variable: 'background-color';

h3 {
  #{$my-third-variable}: lightblue;
}

/* 2. Nesting */
/* ===========*/

//#paragraph-1 {
//  background-color: red;
//}
//
//#paragraph-1 b {
//  font-size: 2rem;
//}
//
//#paragraph-1 span {
//  background-color: yellow;
//}
//
//#paragraph-1:hover {
//  color: white;
//}
//
//#paragraph-1:hover span {
//  color: green;
//  font-weight: bold;
//}

#paragraph-1 {
  background-color: red;

  b {
    font-size: 2rem;
  }

  span {
    background-color: yellow;
    @media all and (max-width: 768px) {
      background-color: blue;
    }
  }

  &:hover {
    color: white;

    span {
      color: green;
      font-weight: bold;
    }
  }
}

/* Revamp above CSS using SASS nesting and parent referencing */

/* 3. Mixins and Extending */
/* ========================*/

/* Create a mixin called "theme" with a two parameters called "background-color" and
 * "text-color" and then use it to apply white and dark theme to the app via the help of extending
 */

@mixin theme($background-color, $text-color) {
  background-color: $background-color;
  color: $text-color;
}

.white {
  @include theme(white, black);
}

.dark {
  @include theme(rgb(77, 77, 77), white);
}

select {
  display: block !important;
}

%center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin changeTheme($theme) {
  #stage.dep-#{$theme} {
    margin-top: 10px;
    width: 250px;
    height: 250px;
    border: 5px solid black;
    @extend %center;
    background-color: light#{$theme};

    #circle {
      @extend %center;
      width: 80%;
      height: 80%;
      background-color: white;
      border: 5px solid black;
      border-radius: 100%;

      h1 {
        padding: 0;
        margin: 0;
        color: #{$theme};
      }
    }
  }
}

@include changeTheme(pink);
@include changeTheme(green);
@include changeTheme(blue);
@include changeTheme(yellow);